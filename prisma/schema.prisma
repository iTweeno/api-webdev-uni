generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ad {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  salary                  Int
  currency                String    @db.VarChar(255)
  last_time_updated       DateTime  @db.Date
  amount_of_times_visited Int
  description             String    @db.VarChar(255)
  title                   String    @db.VarChar(255)
  owner                   String    @db.Uuid
  location                String    @db.VarChar(255)
  premium_until           DateTime? @db.Date
  ad_type                 adtype    @default(paid)
  userr                   userr     @relation(fields: [owner], references: [id], onDelete: NoAction, onUpdate: NoAction)
  message                 message[]
  report                  report[]
}

model message {
  id                             String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  ad_id                          String   @db.Uuid
  messenger                      String   @db.Uuid
  receiver                       String   @db.Uuid
  message_content                String   @db.VarChar(255)
  sent_at                        DateTime @db.Date
  edited                         Boolean
  ad                             ad       @relation(fields: [ad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userr_message_messengerTouserr userr    @relation("message_messengerTouserr", fields: [messenger], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userr_message_receiverTouserr  userr    @relation("message_receiverTouserr", fields: [receiver], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report {
  id              String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_reporting  String @db.Uuid
  ad_id           String @db.Uuid
  message_content String @db.VarChar(255)
  ad              ad     @relation(fields: [ad_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userr           userr  @relation(fields: [user_reporting], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model userr {
  id                               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name                       String    @db.VarChar(255)
  last_name                        String    @db.VarChar(255)
  password                         String    @db.VarChar(255)
  phone_number                     String    @db.VarChar(255)
  email                            String    @unique @db.VarChar(255)
  birthday                         DateTime  @db.Date
  join_date                        DateTime  @db.Date
  company                          String    @db.VarChar(255)
  profile_picture                  String?   @db.VarChar(255)
  user_type                        usertype
  ad                               ad[]
  message_message_messengerTouserr message[] @relation("message_messengerTouserr")
  message_message_receiverTouserr  message[] @relation("message_receiverTouserr")
  report                           report[]
}

enum adtype {
  paid
  internship
  volunteering
}

enum usertype {
  basic
  admin
}
